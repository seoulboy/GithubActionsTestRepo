name: Super-Linter

on: pull_request

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  super-lint:
    # Name the Job
    name: Lint code base
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout code
        uses: actions/checkout@v2

      # Runs the Super-Linter action
      - name: Run Super-Linter
        uses: github/super-linter@v3
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build
    env:
      SCHEME: "GIthubActionTestProject"
      DEVICE: "iPhone 12"
      DERIVED_DATA_PATH: "DerivedData"
    runs-on: macOS-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v1
    - name: Force Xcode 12
      run: sudo xcode-select -switch /Applications/Xcode_12.2.app
    - name: Build Application
      run: |
        set -o pipefail && xcodebuild clean -scheme $SCHEME -destination "platform=iOS Simulator,name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH build-for-testing | xcpretty --color --simple
        
  unit_test:
    name: Unit test
    env:
      DEVICE: "iPhone 12"
      DERIVED_DATA_PATH: "DerivedData"
      UNIT_TEST_TARGET: "GIthubActionTestProjectTests"
    runs-on: macOS-latest
    needs: build
    steps:
    - name: Checkout project
      uses: actions/checkout@v1
    - name: Download products
      uses: actions/download-artifact@v1
      with:
        name: Products
    - name: Run unit tests
      run: |
        set -o pipefail && xcodebuild test-without-building -xctestrun $(find . -type f -name "*.xctestrun") -destination "platform=iOS Simulator,name=$DEVICE" -derivedDataPath $DERIVED_DATA_PATH -enableCodeCoverage YES -only-testing:$UNIT_TEST_TARGET | xcpretty --color --simple
    - name: Upload test logs
      uses: actions/upload-artifact@v1
      with:
        name: TestLogs
        path: DerivedData/Logs/Test
